{"version":3,"sources":["containers/VacationsContainer/components/Vacation.js","containers/VacationsContainer/components/Vacations.js","containers/VacationsContainer/meta/actions.js","containers/VacationsContainer/meta/constants.js","containers/VacationsContainer/meta/reducer.js","containers/VacationsContainer/meta/selectors.js","containers/VacationsContainer/index.js","containers/App/meta/reducer.js","containers/LoginPage/meta/reducer.js","containers/LoginPage/meta/constants.js","containers/ProfileContainer/meta/reducer.js","containers/ProfileContainer/meta/constants.js","utils/cookies.js","containers/AuthContainer/meta/reducer.js","containers/AuthContainer/meta/constants.js","store/reducer.js","utils/environment.js","utils/network.js","utils/endpoint.js","containers/VacationsContainer/meta/saga.js","containers/ProfileContainer/meta/actions.js","containers/ProfileContainer/meta/saga.js","containers/AuthContainer/meta/actions.js","containers/LoginPage/meta/selectors.js","containers/AuthContainer/meta/saga.js","store/saga.js","store/store.js","index.js"],"names":["useStyles","makeStyles","root","maxWidth","media","height","Vacation","vacation","classes","Card","className","CardActionArea","CardMedia","component","src","image","title","description","CardContent","Typography","gutterBottom","variant","destination","color","CardActions","Button","size","vacationsRoot","display","gridColumnGap","gridRowGap","gridTemplateColumns","Vacations","getVacations","vacations","React","useState","items","setItems","useEffect","vacationsElements","map","getVacationsError","payload","type","initialState","state","action","produce","draft","selectVacations","select","mapDispatchToProps","VacationsContainer","connect","appReducer","username","password","loginPageReducer","fieldName","value","user","orders","Profile","Cookies","defaults","expires","userString","domain","window","location","hostname","saveDataToStorage","token","tokenExpiryTime","set","path","JSON","stringify","clearDataFromStorage","remove","get","parse","isAuthenticated","Auth","combineReducers","loginPage","app","profile","auth","BASE_URL","axios","interceptors","response","use","data","networkService","post","getData","putData","deleteData","headers","body","url","config","params","put","setCredentials","Authorization","network","URLS","AUTHENTICATE","subUrl","USER_DATA","GET_VACATIONS","GET_PROFILE","getEndpointURL","key","finalUrl","urlKey","length","handleGetVacations","call","actions","all","takeLatest","getProfileError","handleGetProfile","getAuthError","selectLoginPageDomain","makeSelectLoginPage","createSelector","substate","handleGetAuth","handleLogout","request","saga","vacationsSaga","profileSaga","authSaga","sagaMiddleware","createSagaMiddleware","middlewares","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","applyMiddleware","run","rootSaga","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e5ef6161.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        maxWidth: 500,\r\n    },\r\n    media: {\r\n        height: 140,\r\n    },\r\n});\r\n\r\nexport function Vacation({ vacation }) {\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Card className={classes.root}>\r\n            <CardActionArea>\r\n                <CardMedia\r\n                    component=\"img\"\r\n                    className={classes.media}\r\n                    src={vacation.image}\r\n                    title={vacation.description}\r\n                />\r\n                <CardContent>\r\n                    <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                        {vacation.destination}\r\n                    </Typography>\r\n                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                        {vacation.description}\r\n                    </Typography>\r\n                </CardContent>\r\n            </CardActionArea>\r\n            <CardActions>\r\n                <Button variant=\"contained\" size=\"small\" color=\"primary\">\r\n                    Order\r\n                </Button>\r\n                <Button size=\"small\" color=\"secondary\">\r\n                    Learn More\r\n                </Button>\r\n            </CardActions>\r\n        </Card>\r\n    );\r\n}\r\n\r\nVacation.propTypes = {\r\n    vacation: PropTypes.object\r\n};\r\n\r\nexport default Vacation;\r\n","import React, {useEffect} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport Vacation from \"./Vacation\";\r\n\r\nconst useStyles = makeStyles({\r\n    vacationsRoot: {\r\n        display: 'grid',\r\n        gridColumnGap: '10px',\r\n        gridRowGap: '15px',\r\n        gridTemplateColumns: '2fr 2fr 2fr',\r\n    },\r\n});\r\n\r\nfunction Vacations({ getVacations, vacations }) {\r\n\r\n    const [items, setItems] = React.useState([]);\r\n\r\n    useEffect(() => {\r\n        if (getVacations) {\r\n            getVacations()\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const vacationsElements = vacations.map(vacation => (\r\n            <Vacation vacation={vacation} />)\r\n        );\r\n        setItems(vacationsElements)\r\n    }, [vacations]);\r\n\r\n    const classes = useStyles();\r\n\r\n    return <div className={classes.vacationsRoot}>\r\n        {items}\r\n    </div>;\r\n}\r\n\r\nVacations.propTypes = {\r\n    getVacations: PropTypes.func,\r\n    vacations: PropTypes.array,\r\n};\r\n\r\nexport default Vacations;\r\n","import * as constants from \"./constants\";\r\n\r\n\r\nexport const getVacations = () => ({\r\n    type: constants.GET_VACATIONS,\r\n});\r\n\r\nexport const getVacationsSuccess = payload => ({\r\n    type: constants.GET_VACATIONS_SUCCESS,\r\n    payload,\r\n});\r\n\r\nexport const getVacationsError = payload => ({\r\n    type: constants.GET_VACATIONS_ERROR,\r\n    payload,\r\n});\r\n","export const GET_VACATIONS = 'GET_VACATIONS';\r\nexport const GET_VACATIONS_SUCCESS = 'GET_VACATIONS_SUCCESS';\r\nexport const GET_VACATIONS_ERROR = 'GET_VACATIONS_ERROR';\r\n","import produce from 'immer';\r\nimport * as constants from \"./constants\";\r\n\r\nexport const initialState = {\r\n    vacations: [],\r\n};\r\n\r\n/* eslint-disable no-param-reassign */\r\nconst Vacations = (state = initialState, action) =>\r\n    produce(state, draft => {\r\n        switch (action.type) {\r\n            case constants.GET_VACATIONS_SUCCESS:\r\n                draft.vacations = action.payload;\r\n                break;\r\n            case constants.GET_VACATIONS_ERROR:\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    });\r\n\r\nexport default Vacations;\r\n","import { initialState } from './reducer';\r\n/**\r\n * Get Vacations\r\n * @param state\r\n * @returns {Object}\r\n */\r\nexport const select = state => state.vacations || initialState;\r\nexport const selectVacations = state => select(state).vacations;\r\n","import { connect } from 'react-redux';\r\nimport Vacations from './components/Vacations';\r\nimport {getVacations} from \"./meta/actions\";\r\nimport {selectVacations} from \"./meta/selectors\";\r\n\r\nconst mapStateToProps = state => ({\r\n    vacations: selectVacations(state)\r\n});\r\n\r\nconst mapDispatchToProps = ({\r\n    getVacations,\r\n});\r\n\r\nconst VacationsContainer = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps,\r\n)(Vacations);\r\n\r\nexport default VacationsContainer;\r\n","/* eslint-disable no-param-reassign */\r\nimport produce from 'immer';\r\n\r\nexport const initialState = {\r\n};\r\n\r\nconst appReducer = (state = initialState, action) =>\r\n  produce(state, draft => {\r\n    switch (action.type) {\r\n      default:\r\n        break;\r\n    }\r\n  });\r\n\r\nexport default appReducer;\r\n","/* eslint-disable no-param-reassign */\r\n/*\r\n *\r\n * LoginPage reducer\r\n *\r\n */\r\n\r\nimport { produce } from 'immer';\r\nimport { LOGIN_FIELD_CHANGE } from './constants';\r\n\r\nexport const initialState = {\r\n  username: '',\r\n  password: '',\r\n};\r\n\r\nconst loginPageReducer = (state = initialState, action) =>\r\n  produce(state, draft => {\r\n    switch (action.type) {\r\n      /**\r\n       * Login Field Change\r\n       */\r\n      case LOGIN_FIELD_CHANGE: {\r\n        if (action.fieldName === 'password') {\r\n          draft.password = action.value;\r\n          break;\r\n        }\r\n        draft.username = action.value;\r\n        break;\r\n      }\r\n      default:\r\n        break;\r\n    }\r\n  });\r\n\r\nexport default loginPageReducer;\r\n","/*\r\n *\r\n * LoginPage constants\r\n *\r\n */\r\n\r\nexport const DEFAULT_ACTION = 'app/LoginPage/DEFAULT_ACTION';\r\nexport const LOGIN_FIELD_CHANGE = 'app/LoginPage/LOGIN_FIELD_CHANGE';\r\n","import produce from 'immer';\r\nimport * as constants from \"./constants\";\r\n\r\nexport const initialState = {\r\n    user: {},\r\n    orders: [],\r\n};\r\n\r\n/* eslint-disable no-param-reassign */\r\nconst Profile = (state = initialState, action) =>\r\n    produce(state, draft => {\r\n        switch (action.type) {\r\n            case constants.GET_PROFILE_SUCCESS:\r\n                draft.user = action.payload.user;\r\n                draft.orders = action.payload.orders;\r\n                break;\r\n            case constants.GET_PROFILE_ERROR:\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    });\r\n\r\nexport default Profile;\r\n","export const GET_PROFILE = 'GET_PROFILE';\r\nexport const GET_PROFILE_SUCCESS = 'GET_PROFILE_SUCCESS';\r\nexport const GET_PROFILE_ERROR = 'GET_PROFILE_ERROR';\r\n","import Cookies from 'js-cookie';\r\n\r\n/**\r\n * save auth data to storage\r\n * clear auth data from storage\r\n * get auth data from storage\r\n */\r\n\r\nCookies.defaults.expires = 1;\r\n\r\nconst domain = window.location.hostname;\r\n\r\nconst path = '';\r\n\r\n// save auth data to storage\r\nexport const saveDataToStorage = ({ token, tokenExpiryTime, user }) => {\r\n  Cookies.set('token', token, { domain, path });\r\n  Cookies.set('user', JSON.stringify(user), { domain, path });\r\n};\r\n\r\n// clear auth data from storage\r\nexport const clearDataFromStorage = () => {\r\n  Cookies.remove('token', { domain, path });\r\n  Cookies.remove('user', { domain, path });\r\n};\r\n\r\n// get auth data from storage\r\nexport const getDataFromStorage = () => ({\r\n  token: Cookies.get('token', { domain, path }),\r\n  user: Cookies.get('user', { domain, path })\r\n});\r\n","import produce from 'immer';\r\nimport { getDataFromStorage } from '../../../utils/cookies';\r\nimport * as constants from \"./constants\";\r\nconst {token,user}= getDataFromStorage();\r\nconst getUser = userString => userString && JSON.parse(userString)\r\nexport const initialState = {\r\n     token,\r\n     user : getUser(user),\r\n     isAuthenticated : !!token\r\n};\r\n\r\n/* eslint-disable no-param-reassign */\r\nconst Auth = (state = initialState, action) =>\r\n    produce(state, draft => {\r\n        switch (action.type) {\r\n            case constants.GET_AUTH_SUCCESS:\r\n                draft.token = action.payload.token;\r\n                draft.user = action.payload.user;\r\n                draft.isAuthenticated = true;\r\n                break;\r\n            case constants.GET_AUTH_ERROR:\r\n                break;\r\n                case constants.LOG_OUT:\r\n                   delete draft.token \r\n                   delete draft.user\r\n                  draft.isAuthenticated = false;\r\n            default:\r\n                break;\r\n        }\r\n    });\r\n\r\nexport default Auth;\r\n","export const GET_AUTH = 'GET_AUTH';\r\nexport const GET_AUTH_SUCCESS = 'GET_AUTH_SUCCESS';\r\nexport const GET_AUTH_ERROR = 'GET_AUTH_ERROR';\r\nexport const LOG_OUT = 'LOG_OUT';\r\n","import { combineReducers } from \"redux\";\r\nimport app from '../containers/App/meta/reducer';\r\nimport loginPage from '../containers/LoginPage/meta/reducer';\r\nimport vacations from 'containers/VacationsContainer/meta/reducer';\r\nimport profile from 'containers/ProfileContainer/meta/reducer';\r\nimport auth from '../containers/AuthContainer/meta/reducer';\r\n\r\nexport default combineReducers({\r\n    loginPage,\r\n    app,\r\n    profile,\r\n    vacations,\r\n    auth\r\n});\r\n\r\n","let BASE_URL = 'http://localhost:9000/';\r\n\r\nexport {BASE_URL};\r\n","import axios from 'axios';\r\nimport { BASE_URL } from './environment';\r\n\r\naxios.interceptors.response.use(\r\n    response => response.data\r\n);\r\n\r\nfunction network(){\r\n    const baseUrl = BASE_URL;\r\n    const headers  = {};\r\n    function setCredentials(token){\r\n         headers.Authorization = `Bearer ${token}`\r\n    }\r\n     function* post(action,body){\r\n         const url = baseUrl+action;\r\n         const config = {headers};\r\n         return  yield axios.post(url,body,config);\r\n     }\r\n\r\n     function* getData(action,params){\r\n        const url = BASE_URL+action;\r\n        const config = {headers,params};\r\n        return  yield axios.post(url,config);\r\n    }\r\n\r\n    function* putData(action,body){\r\n        const url = BASE_URL+action;\r\n        const config = {headers};\r\n        return  yield axios.put(url,body,config);\r\n    }\r\n    function* deleteData(action,params){\r\n        const url = BASE_URL+action;\r\n        const config = {headers,params};\r\n        return  yield axios.put(url,config);\r\n    }\r\n\r\n    return {\r\n        setCredentials,\r\n        post,\r\n        getData,\r\n        putData,\r\n        deleteData\r\n     }\r\n}\r\n\r\n const networkService = network()\r\nexport default networkService;\r\n","export const URLS = {\r\n  AUTHENTICATE: { url: 'auth', subUrl: '' },\r\n  USER_DATA: { url: 'users', subUrl: 'me' },\r\n  GET_VACATIONS: { url: 'vacations' },\r\n  GET_PROFILE: { url: 'profile' },\r\n};\r\n\r\nexport const getEndpointURL = key => {\r\n  let finalUrl = '';\r\n  if (key && URLS[key]) {\r\n    const urlKey = URLS[key];\r\n    if (urlKey.url) {\r\n      finalUrl = urlKey.url;\r\n    }\r\n    if (urlKey.subUrl && urlKey.subUrl.length > 0) {\r\n      finalUrl += `/${urlKey.subUrl}`;\r\n    }\r\n  }\r\n  return finalUrl;\r\n};\r\n","import { all, takeLatest, put, call } from 'redux-saga/effects';\r\nimport * as constants from \"./constants\";\r\nimport * as actions from \"./actions\";\r\nimport network from \"utils/network\";\r\nimport {getEndpointURL} from \"utils/endpoint\";\r\n\r\nfunction* handleGetVacations() {\r\n    try {\r\n        const action = getEndpointURL('GET_VACATIONS');\r\n        const response = yield call(network.getData, action);\r\n        yield put(actions.getVacationsSuccess(response))\r\n    } catch(error) {\r\n        yield put(actions.getVacationsError(error))\r\n    }\r\n}\r\n\r\nexport default function*() {\r\n    yield all([\r\n        yield takeLatest(constants.GET_VACATIONS, handleGetVacations),\r\n    ]);\r\n}\r\n","import * as constants from \"./constants\";\r\n\r\n\r\nexport const getProfile = () => ({\r\n    type: constants.GET_PROFILE,\r\n});\r\n\r\nexport const getProfileSuccess = payload => ({\r\n    type: constants.GET_PROFILE_SUCCESS,\r\n    payload,\r\n});\r\n\r\nexport const getProfileError = payload => ({\r\n    type: constants.GET_PROFILE_ERROR,\r\n    payload,\r\n});\r\n","import { all, takeLatest, put, call } from 'redux-saga/effects';\r\nimport * as constants from \"./constants\";\r\nimport * as actions from \"./actions\";\r\nimport {getEndpointURL} from \"utils/endpoint\";\r\nimport network from \"utils/network\";\r\n\r\nfunction* handleGetProfile() {\r\n    try {\r\n        const action = getEndpointURL('GET_PROFILE');\r\n        const response = yield call(network.getData, action);\r\n        yield put(actions.getProfileSuccess(response))\r\n    } catch(error) {\r\n        yield put(actions.getProfileError(error))\r\n    }\r\n}\r\n\r\nexport default function*() {\r\n    yield all([\r\n        yield takeLatest(constants.GET_PROFILE, handleGetProfile),\r\n    ]);\r\n}\r\n","import * as constants from \"./constants\";\r\n\r\n\r\nexport const getAuth = () => ({\r\n    type: constants.GET_AUTH,\r\n});\r\n\r\nexport const getAuthSuccess = payload => ({\r\n    type: constants.GET_AUTH_SUCCESS,\r\n    payload,\r\n});\r\n\r\nexport const getAuthError = payload => ({\r\n    type: constants.GET_AUTH_ERROR,\r\n    payload,\r\n});\r\n\r\nexport const logout = ()=> ({type : constants.LOG_OUT})\r\n","import { createSelector } from 'reselect';\r\nimport { initialState } from './reducer';\r\n\r\n/**\r\n * Direct selector to the loginPage state domain\r\n */\r\n\r\nconst selectLoginPageDomain = state => state.Auth || initialState;\r\n\r\n/**\r\n * Other specific selectors\r\n */\r\n\r\n/**\r\n * Default selector used by LoginPage\r\n */\r\n\r\nconst makeSelectLoginPage = () =>\r\n  createSelector(\r\n    selectLoginPageDomain,\r\n    substate => substate,\r\n  );\r\n\r\nconst makeSelectLoginPagePassword = () =>\r\n  createSelector(\r\n    selectLoginPageDomain,\r\n    substate => substate.password,\r\n  );\r\n\r\nconst makeSelectLoginPageUsername = () =>\r\n  createSelector(\r\n    selectLoginPageDomain,\r\n    substate => substate.username,\r\n  );\r\n\r\nexport default makeSelectLoginPage;\r\nexport {\r\n  selectLoginPageDomain,\r\n  makeSelectLoginPagePassword,\r\n  makeSelectLoginPageUsername,\r\n};\r\n","import { all, takeLatest, put,select,call} from 'redux-saga/effects';\r\nimport * as constants from \"./constants\";\r\nimport * as actions from \"./actions\";\r\nimport makeSelectLoginPage from '../../LoginPage/meta/selectors';\r\nimport {getEndpointURL} from '../../../utils/endpoint'\r\nimport network from '../../../utils/network';\r\nimport { saveDataToStorage ,clearDataFromStorage} from '../../../utils/cookies';\r\nfunction* handleGetAuth(action) {\r\n    try {\r\n        const loginPage = yield select(makeSelectLoginPage());\r\n        const request = {username : 'admin@gmail.com', password : '1234'};\r\n        const action = getEndpointURL('AUTHENTICATE');\r\n        const response =  yield call(network.post,action,request);\r\n         yield call(saveDataToStorage,response);\r\n        yield put(actions.getAuthSuccess(response))\r\n    } catch(error) {\r\n        yield put(actions.getAuthError(error))\r\n    }\r\n}\r\n\r\nfunction* handleLogout (){\r\n yield call(clearDataFromStorage);\r\n\r\n}\r\nexport default function*() {\r\n    yield all([\r\n        yield takeLatest(constants.GET_AUTH, handleGetAuth),\r\n        yield takeLatest(constants.LOG_OUT,handleLogout)\r\n\r\n    ]);\r\n}\r\n","import {all} from 'redux-saga/effects';\r\nimport vacationsSaga from 'containers/VacationsContainer/meta/saga';\r\nimport profileSaga from 'containers/ProfileContainer/meta/saga';\r\nimport authSaga from 'containers/AuthContainer/meta/saga';\r\nexport default function* saga() {\r\n    yield all([\r\n        vacationsSaga(),\r\n        profileSaga(),\r\n        authSaga()\r\n    ]);\r\n}\r\n\r\n","import {createStore, applyMiddleware,compose} from \"redux\";\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport rootReducer from './reducer';\r\nimport rootSaga from './saga';\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst middlewares = [sagaMiddleware];\r\n\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(...middlewares))\r\n);\r\n\r\nsagaMiddleware.run(rootSaga);\r\nexport default store;\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n// import LoginPage from './containers/LoginPage';\r\nimport Vacaations from './containers/VacationsContainer'\r\nimport store from \"./store/store\";\r\nimport {Provider} from \"react-redux\";\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <Vacaations/>\r\n    </Provider>, document.getElementById('root'));\r\n"],"sourceRoot":""}